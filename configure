#! /usr/bin/env node
/* vim:set ft=javascript : */
/*
 * Nodelint [VERSION]
 * [DATE]
 * A fork of tav's nodelint (http://github.com/tav/nodelint)
 * Corey Hart @ http://www.codenothing.com
 */
var Nodelint = require('./src/Nodelint'),
	Color = Nodelint.Color,
	bold = Color.bold,
	sys = require('sys'),
	fs = require('fs'),
	Path = require('path'),
	dist = __dirname + '/dist/';


// Creates the directory if it doesn't exist
function mkdir( dir, callback ) {
	Path.exists( dir, function( exists ) {
		if ( exists ) {
			callback();
		}
		else {
			fs.mkdir( dir, 0755, function( e ) {
				if ( e ) {
					sys.error( bold.red( e ) );
					process.exit( 1 );
				}

				callback();
			});
		}
	});
}


// Add configurables not in options
Nodelint.extend( true, Nodelint.Options, {
	prefix: process.installPrefix,

	// For path normalization
	_paths: {
		prefix: true
	}
});


// Store configuration
mkdir( dist, function(){
	// Borrow the main argument handler
	var argv = Nodelint.ARGV( Nodelint.Options, process.argv.slice( 1 ) );

	// Stash configuration
	fs.writeFile( dist + '.config', JSON.stringify( argv.options ), 'utf8', function( e ) {
		if ( e ) {
			sys.error( bold.red( e ) );
			process.exit( 1 );
		}
	});
});
